position = position_stack(vjust = 0.5)) +
theme(plot.title = element_blank(),
#plot.background = element_rect(fill = "green"),
#panel.background = element_rect(fill = "white", colour = "grey50"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=9, face="bold", family="Helvetica Neue", vjust=-2),
axis.text.y=element_text(size=9),
legend.position="none",
legend.text=element_text(size=9),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(0.5, 0, 0, 1.5), "cm"))
print(lc_all_choices)
mCols = c("#91ac9a", "#a9c3b6", "#cedfdf", "#b7d1d3", "#a6c3ce", "#8fb8ca")
lc_all_classes = ggplot(res[[4]], aes(fill=name, y=value, x=policy)) +
geom_bar(stat="identity", position="fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.0)) +
scale_fill_manual(values = mCols) +
scale_x_discrete(position = "top",
expand = expansion(mult = 0.1)) +
guides(fill = guide_legend(reverse=TRUE)) +
labs(fill = CHOICE_reorder) +
theme_minimal() +
geom_text(aes(label = ifelse((value > 0.03), percent(value, accuracy = 1), "")),
size = 3,
fontface = "bold",
family = "Helvetica Neue",
position = position_stack(vjust = 0.5)) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
#plot.background = element_rect(fill = "green"),
#panel.background = element_rect(fill = "white", colour = "grey50"),
panel.background = element_rect(fill='transparent', color=NA), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=9, face="bold", family="Helvetica Neue"),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
legend.position="none",
legend.text=element_text(size=9),
#axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_all_classes)
grid.circle(x = unit(0.05, "npc"), y = unit(0.97, "npc"), r = 0.03, gp = gpar(lwd=2))
grid.text("C", x = unit(0.05, "npc"), y = unit(0.97, "npc"), gp = gpar(fontface = "bold", fontsize=11))
lc_all_classes_plot = grid.grab()
ggsave(file="../../Manuscripts/lc_all_classes_predictions.svg", device = "svg",
plot=lc_all_classes_plot, width=4.2, height=2.6, bg = "transparent")
res[c(1:3)]
## trickier, now to process data from the other each class and make complicated plot
plotdata = bind_rows(res[c(1:3)]) %>% # extract data for the classes
# solve for width issues
arrange(name, policy) %>% # arrange as class1, class2, class3 repetitively
group_by(name, policy) %>%
mutate(w = cumsum(classProb), wm = w - classProb, wt = wm + (w - wm)/2, mid = (w + wm)/2) %>%
# solve for height issues
arrange(policy, class) %>% # arrange by policy then preference i.e., group policy together then sort by name
group_by(policy, class) %>%
mutate(wx = cumsum(value), wxm = wx - value, wtx = wxm + (wx - wxm)/2, midy = 1-wtx)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = NULL,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 7, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep)
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = NULL,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 7, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = percent,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = NULL,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 7, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = percent,
expand = expansion(mult = 0.0)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = NULL,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 7, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 7, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 3,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color="black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x=element_text(size=9),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 3,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.1) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 3,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.3) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 3,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.x=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
grid.circle(x = unit(0.06, "npc"), y = unit(0.93, "npc"), r = 0.04, gp = gpar(lwd=2))
print(lc_sep_classes)
grid.circle(x = unit(0.05, "npc"), y = unit(0.97, "npc"), r = 0.03, gp = gpar(lwd=2))
grid.text("D", x = unit(0.05, "npc"), y = unit(0.97, "npc"), gp = gpar(fontface = "bold", fontsize=11))
lc_sep_classes_plot = grid.grab()
ggsave(file="../../Manuscripts/lc_class_predictions.svg", plot=lc_sep_classes_plot, width=4.2, height=2.6, bg = "transparent")
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", size=0.3) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.x=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
print(lc_sep_classes)
grid.circle(x = unit(0.05, "npc"), y = unit(0.97, "npc"), r = 0.03, gp = gpar(lwd=2))
grid.text("D", x = unit(0.05, "npc"), y = unit(0.97, "npc"), gp = gpar(fontface = "bold", fontsize=11))
lc_sep_classes_plot = grid.grab()
ggsave(file="../../Manuscripts/lc_class_predictions.svg", plot=lc_sep_classes_plot, width=4.2, height=2.6, bg = "transparent")
ggsave(file="../../Manuscripts/lc_class_predictions.svg", plot=lc_sep_classes_plot, width=5, height=5, bg = "transparent")
ggsave(file="../../Manuscripts/lc_class_predictions.svg", plot=lc_sep_classes_plot, width=5, height=3, bg = "transparent")
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx), color="white", width = 0.5, size=0.3) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.x=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
lc_sep_classes = ggplot(plotdata, aes(ymin = 1-wxm)) +
scale_x_continuous(breaks = sort(unique(plotdata$mid)),
labels = NULL,
expand = expansion(mult = 0.05)) +
scale_y_continuous(breaks = seq(0, 1, .2),
labels = percent,
expand = expansion(mult = 0.01)) +
geom_rect(stat="identity", aes(xmin = wm, xmax = w, fill=name, ymax=1-wx, width=0.1), color="white", size=0.3) +
scale_fill_manual(values = mCols) +
#labels=c("LC 1","LC 2","LC 3")) +
theme_minimal() +
geom_text(aes(x=mid, y=midy, label = ifelse((value > 0.03), percent(value, accuracy=1), "")),
size = 2,
fontface = "bold",
family = "Helvetica Neue") +
facet_grid(~policy) +
theme(plot.title = element_blank(),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_text(size=9, face="bold", family="Helvetica Neue"),
#axis.text.x=element_text(size=9),
legend.position="none",
strip.text.x = element_text(size = 9, face="bold", family="Helvetica Neue"),
#axis.text.y=element_text(size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'transparent', color = NA), #transparent panel bg
plot.background = element_rect(fill = 'transparent', color = NA), #transparent plot bg
plot.margin = unit(c(0.6, 0, 0.3, 0.1), "cm"))
View(plotdata)
# define function for detaching variables
detachAllData <-
function ()
{
pos.to.detach <- (1:length(search()))[substring(search(),
first = 1, last = 8) != "package:" & search() != ".GlobalEnv" &
search() != "Autoloads" & search() != "CheckExEnv" & search() != "tools:rstudio" & search() != "TempEnv"]
for (i in 1:length(pos.to.detach)) {
if (length(pos.to.detach) > 0) {
detach(pos = pos.to.detach[1])
pos.to.detach <- (1:length(search()))[substring(search(),
first = 1, last = 8) != "package:" & search() !=
".GlobalEnv" & search() != "Autoloads" & search() !=
"CheckExEnv" & search() != "tools:rstudio" &
search() != "TempEnv"]
}
}
}
detachAllData()
detach(all)
