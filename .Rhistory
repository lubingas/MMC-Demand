rm(list=ls())
library(apollo)
setwd("c:/myD/MMC/ICLV_CONTROL_BELIEFS")
apollo_initialise()
apollo_control = list(modelName ="ICLV_3_LC_CONTROL_BELIEFS_Rand_Intercept",
modelDescr ="ICLV 3 LC WITH CONTROL BELIEFS RANDOM INTERCEPT IN LC FUNCTION",
indivID ="ID",
mixing =TRUE,
nCores =4)
database = read.csv("../cleanerdata.csv",header=TRUE)
# interaction terms
database$pricenone1=database$price1*(database$none1==1)
database$pricenone2=database$price2*(database$none2==1)
database$pricevoucher1=database$price1*(database$voucher1==1)
database$pricevoucher2=database$price2*(database$voucher2==1)
database$pricecash1=database$price1*(database$cash1==1)
database$pricecash2=database$price2*(database$cash2==1)
#####################################################################
#####################################################################
# DEFINE MODEL PARAMETERS                                           #
#####################################################################
#####################################################################
# set names for parameters
parnames=c("neither_C1","permhc_C1","dist5_C1","dist15_C1","avail_C1","somepriv_C1","notpriv_C1","device_C1","voucher_C1","cash_C1","pricenone_C1","pricevoucher_C1","pricecash_C1",
"neither_C2","permhc_C2","dist5_C2","dist15_C2","avail_C2","somepriv_C2","notpriv_C2","device_C2","voucher_C2","cash_C2","pricenone_C2","pricevoucher_C2","pricecash_C2",
"neither_C3","permhc_C3","dist5_C3","dist15_C3","avail_C3","somepriv_C3","notpriv_C3","device_C3","voucher_C3","cash_C3","pricenone_C3","pricevoucher_C3","pricecash_C3",
# Latent class model parameters
"INTERCEPT_C2_mu","INTERCEPT_C3_mu",
"INTERCEPT_C2_sig","INTERCEPT_C3_sig",
"tau_SOCIALBARS_C2","tau_SOCIALBARS_C3",
"tau_FEARSURGERY_C2","tau_FEARSURGERY_C3",
"tau_PRIVACY_C2","tau_PRIVACY_C3",
"tau_TRAVELCOST_C2","tau_TRAVELCOST_C3",
"tau_REASSURANCE_C2","tau_REASSURANCE_C3",
# lambdas for indicators
"SOCIALBARS_lambda01","SOCIALBARS_lambda02","SOCIALBARS_lambda03","SOCIALBARS_lambda04",
"FEARSURGERY_lambda01","FEARSURGERY_lambda02","FEARSURGERY_lambda03","FEARSURGERY_lambda04",
"PRIVACY_lambda01","PRIVACY_lambda02","PRIVACY_lambda03","PRIVACY_lambda04",
"TRAVELCOST_lambda01","TRAVELCOST_lambda02","TRAVELCOST_lambda03",
"REASSURANCE_lambda01","REASSURANCE_lambda02","REASSURANCE_lambda03","REASSURANCE_lambda04","REASSURANCE_lambda05",
# SIGMAS
"SOCIALBARS_sig","FEARSURGERY_sig","PRIVACY_sig","TRAVELCOST_sig","REASSURANCE_sig",
# parameters to compute thresholds for the indicators #
"SOCIALBARS_tau01_1","SOCIALBARS_tau01_2","SOCIALBARS_tau01_3","SOCIALBARS_tau01_4",
"SOCIALBARS_tau02_1","SOCIALBARS_tau02_2","SOCIALBARS_tau02_3","SOCIALBARS_tau02_4",
"SOCIALBARS_tau03_1","SOCIALBARS_tau03_2","SOCIALBARS_tau03_3","SOCIALBARS_tau03_4",
"SOCIALBARS_tau04_1","SOCIALBARS_tau04_2","SOCIALBARS_tau04_3","SOCIALBARS_tau04_4",
"FEARSURGERY_tau01_1","FEARSURGERY_tau01_2","FEARSURGERY_tau01_3","FEARSURGERY_tau01_4",
"FEARSURGERY_tau02_1","FEARSURGERY_tau02_2","FEARSURGERY_tau02_3","FEARSURGERY_tau02_4",
"FEARSURGERY_tau03_1","FEARSURGERY_tau03_2","FEARSURGERY_tau03_3","FEARSURGERY_tau03_4",
"FEARSURGERY_tau04_1","FEARSURGERY_tau04_2","FEARSURGERY_tau04_3","FEARSURGERY_tau04_4",
"PRIVACY_tau01_1","PRIVACY_tau01_2","PRIVACY_tau01_3","PRIVACY_tau01_4",
"PRIVACY_tau02_1","PRIVACY_tau02_2","PRIVACY_tau02_3","PRIVACY_tau02_4",
"PRIVACY_tau03_1","PRIVACY_tau03_2","PRIVACY_tau03_3","PRIVACY_tau03_4",
"PRIVACY_tau04_1","PRIVACY_tau04_2","PRIVACY_tau04_3",
"TRAVELCOST_tau01_1","TRAVELCOST_tau01_2","TRAVELCOST_tau01_3","TRAVELCOST_tau01_4",
"TRAVELCOST_tau02_1","TRAVELCOST_tau02_2","TRAVELCOST_tau02_3","TRAVELCOST_tau02_4",
"TRAVELCOST_tau03_1","TRAVELCOST_tau03_2","TRAVELCOST_tau03_3","TRAVELCOST_tau03_4",
"REASSURANCE_tau01_1","REASSURANCE_tau01_2","REASSURANCE_tau01_3","REASSURANCE_tau01_4",
"REASSURANCE_tau02_1","REASSURANCE_tau02_2","REASSURANCE_tau02_3","REASSURANCE_tau02_4",
"REASSURANCE_tau03_1","REASSURANCE_tau03_2","REASSURANCE_tau03_3","REASSURANCE_tau03_4",
"REASSURANCE_tau04_1","REASSURANCE_tau04_2","REASSURANCE_tau04_3","REASSURANCE_tau04_4",
"REASSURANCE_tau05_1","REASSURANCE_tau05_2","REASSURANCE_tau05_3","REASSURANCE_tau05_4")
startvalues=rep(1,length(parnames))
names(startvalues)=parnames
# set starting values
# set starting values
est=read.csv("ICLV_3_LC_CONTROL_BELIEFS_Rand_Intercept_iterations.csv")[4,1:152]
est=unlist(est)
startvalues[match(parnames, names(startvalues))] = est[match(parnames, names(est))]
startvalues[is.na(startvalues)] = 1
rm(list=ls())
library(apollo)
setwd("c:/myD/MMC/ICLV_CONTROL_BELIEFS")
apollo_initialise()
apollo_control = list(modelName ="ICLV_3_LC_CONTROL_BELIEFS_Rand_Intercept",
modelDescr ="ICLV 3 LC WITH CONTROL BELIEFS RANDOM INTERCEPT IN LC FUNCTION",
indivID ="ID",
mixing =TRUE,
nCores =4)
database = read.csv("../cleanerdata.csv",header=TRUE)
# interaction terms
database$pricenone1=database$price1*(database$none1==1)
database$pricenone2=database$price2*(database$none2==1)
database$pricevoucher1=database$price1*(database$voucher1==1)
database$pricevoucher2=database$price2*(database$voucher2==1)
database$pricecash1=database$price1*(database$cash1==1)
database$pricecash2=database$price2*(database$cash2==1)
#####################################################################
#####################################################################
# DEFINE MODEL PARAMETERS                                           #
#####################################################################
#####################################################################
# set names for parameters
parnames=c("neither_C1","permhc_C1","dist5_C1","dist15_C1","avail_C1","somepriv_C1","notpriv_C1","device_C1","voucher_C1","cash_C1","pricenone_C1","pricevoucher_C1","pricecash_C1",
"neither_C2","permhc_C2","dist5_C2","dist15_C2","avail_C2","somepriv_C2","notpriv_C2","device_C2","voucher_C2","cash_C2","pricenone_C2","pricevoucher_C2","pricecash_C2",
"neither_C3","permhc_C3","dist5_C3","dist15_C3","avail_C3","somepriv_C3","notpriv_C3","device_C3","voucher_C3","cash_C3","pricenone_C3","pricevoucher_C3","pricecash_C3",
# Latent class model parameters
"INTERCEPT_C2_mu","INTERCEPT_C3_mu",
"INTERCEPT_C2_sig","INTERCEPT_C3_sig",
"tau_SOCIALBARS_C2","tau_SOCIALBARS_C3",
"tau_FEARSURGERY_C2","tau_FEARSURGERY_C3",
"tau_PRIVACY_C2","tau_PRIVACY_C3",
"tau_TRAVELCOST_C2","tau_TRAVELCOST_C3",
"tau_REASSURANCE_C2","tau_REASSURANCE_C3",
# lambdas for indicators
"SOCIALBARS_lambda01","SOCIALBARS_lambda02","SOCIALBARS_lambda03","SOCIALBARS_lambda04",
"FEARSURGERY_lambda01","FEARSURGERY_lambda02","FEARSURGERY_lambda03","FEARSURGERY_lambda04",
"PRIVACY_lambda01","PRIVACY_lambda02","PRIVACY_lambda03","PRIVACY_lambda04",
"TRAVELCOST_lambda01","TRAVELCOST_lambda02","TRAVELCOST_lambda03",
"REASSURANCE_lambda01","REASSURANCE_lambda02","REASSURANCE_lambda03","REASSURANCE_lambda04","REASSURANCE_lambda05",
# SIGMAS
"SOCIALBARS_sig","FEARSURGERY_sig","PRIVACY_sig","TRAVELCOST_sig","REASSURANCE_sig",
# parameters to compute thresholds for the indicators #
"SOCIALBARS_tau01_1","SOCIALBARS_tau01_2","SOCIALBARS_tau01_3","SOCIALBARS_tau01_4",
"SOCIALBARS_tau02_1","SOCIALBARS_tau02_2","SOCIALBARS_tau02_3","SOCIALBARS_tau02_4",
"SOCIALBARS_tau03_1","SOCIALBARS_tau03_2","SOCIALBARS_tau03_3","SOCIALBARS_tau03_4",
"SOCIALBARS_tau04_1","SOCIALBARS_tau04_2","SOCIALBARS_tau04_3","SOCIALBARS_tau04_4",
"FEARSURGERY_tau01_1","FEARSURGERY_tau01_2","FEARSURGERY_tau01_3","FEARSURGERY_tau01_4",
"FEARSURGERY_tau02_1","FEARSURGERY_tau02_2","FEARSURGERY_tau02_3","FEARSURGERY_tau02_4",
"FEARSURGERY_tau03_1","FEARSURGERY_tau03_2","FEARSURGERY_tau03_3","FEARSURGERY_tau03_4",
"FEARSURGERY_tau04_1","FEARSURGERY_tau04_2","FEARSURGERY_tau04_3","FEARSURGERY_tau04_4",
"PRIVACY_tau01_1","PRIVACY_tau01_2","PRIVACY_tau01_3","PRIVACY_tau01_4",
"PRIVACY_tau02_1","PRIVACY_tau02_2","PRIVACY_tau02_3","PRIVACY_tau02_4",
"PRIVACY_tau03_1","PRIVACY_tau03_2","PRIVACY_tau03_3","PRIVACY_tau03_4",
"PRIVACY_tau04_1","PRIVACY_tau04_2","PRIVACY_tau04_3",
"TRAVELCOST_tau01_1","TRAVELCOST_tau01_2","TRAVELCOST_tau01_3","TRAVELCOST_tau01_4",
"TRAVELCOST_tau02_1","TRAVELCOST_tau02_2","TRAVELCOST_tau02_3","TRAVELCOST_tau02_4",
"TRAVELCOST_tau03_1","TRAVELCOST_tau03_2","TRAVELCOST_tau03_3","TRAVELCOST_tau03_4",
"REASSURANCE_tau01_1","REASSURANCE_tau01_2","REASSURANCE_tau01_3","REASSURANCE_tau01_4",
"REASSURANCE_tau02_1","REASSURANCE_tau02_2","REASSURANCE_tau02_3","REASSURANCE_tau02_4",
"REASSURANCE_tau03_1","REASSURANCE_tau03_2","REASSURANCE_tau03_3","REASSURANCE_tau03_4",
"REASSURANCE_tau04_1","REASSURANCE_tau04_2","REASSURANCE_tau04_3","REASSURANCE_tau04_4",
"REASSURANCE_tau05_1","REASSURANCE_tau05_2","REASSURANCE_tau05_3","REASSURANCE_tau05_4")
startvalues=c(startvalues,
0.1,0.1,                        # mu and sigma for INTERCEPT for LC parameters, class 2
0.1,0.1,                        # mu and sigma for INTERCEPT for LC parameters, class 3
rep(0,10),                      # taus for the latent class model
rep(1,4+4+4+3+5),               # lambdas in measurement model of indicators
## STANDARD DEVIATION FOR LATENT VARIABLES, ONLY DIAGONALS FOR NOW, CAN ASSIGN WHATEVER CORRELATION STRUCTURE YOU WANT
1,1,1,1,1,                      # SOCIALBARS, FEARSURGERY, PRIVACY, REASSURANCE, TRAVELCOST
rep(c(-2,-1,1,2),4),            # taus (thresholds) in measurement model of SOCIALBARS
rep(c(-2,-1,1,2),4),            # taus (thresholds) in measurement model of FEARSURGERY
rep(c(-2,-1,1,2),3),            # taus (thresholds) in measurement model of PRIVACY (first 3 indicators)
rep(c(-2,1,2),1),               # taus (thresholds) in measurement model of PRIVACY (last indicators)
rep(c(-2,-1,1,2),3),            # taus (thresholds) in measurement model of TRAVELCOST
rep(c(-2,-1,1,2),5))            # taus (thresholds) in measurement model of REASSURANCE
startvalues=rep(1,length(parnames))
names(startvalues)=parnames
# set starting values
est=read.csv("ICLV_3_LC_CONTROL_BELIEFS_Rand_Intercept_iterations.csv")[4,1:152]
est=unlist(est)
startvalues[match(parnames, names(startvalues))] = est[match(parnames, names(est))]
startvalues[is.na(startvalues)] = 1
